---
layout: post
title: 失踪人口回归，聊聊游戏研发那些事儿
date: 2022-05-02 03:49:47
excerpt: 大家五一快乐，好久不见，失踪人口回归啦！这段时间接触游戏研发管理比较多，对游戏的行业发展、技术架构、研发模式等方面有了一些新的认识，毕竟自己曾经也是「游戏厅三王子」，曾经荣获「拳皇97战神」、「西游&三国一币通关王」等称号（手动狗头），当年玩游戏的时候就对游戏的制作有很多疑惑，最近总算是有了一定的了解了，所以写写分享给大家。
---

五一假期，阴雨绵绵，只能宅在家中看书，突然想起很久没写文章了，主要是近期工作上有些变动，新的工作涉及一些新的领域 - **游戏研发管理**，所以在这块上投入了大量的时间进行行业、技术的研究，毕竟从第一性原理出发，我们做任何事情都需要自下而上的思考问题，了解核心，对基础的事物要有一个正确的认知，这样才能在所涉及的领域内做出正确的判断，得出合理的结论，所以深入游戏研发管理、行业发展现状及趋势，就能更好的了解现有的问题及痛点，才能更好的解决核心问题。

废话不多说，直接进入重点。

### 对游戏的理解

游戏跟常规互联网软件的研发以及表现形式是有很大差别的，但是其本质却大体相似。一般的应用基本都可以分为 Model、View、Controller 三层，这里所说的差别主要是在 View 层。日常我们所用到的软件大体可以分为两种：Web 以及 APP 应用，其实游戏就算是一种 APP 应用，当然也有 Web 页游：

![输入图片说明](https://blogine-1251619080.cos.ap-guangzhou.myqcloud.com/uploads/images/2022/0502/105259_9867b0e0.png "在这里输入图片标题")

说它特殊，是因为它不像常规的APP那样，打开就是常见的 GUI 操作界面，然后实现一些特定的业务逻辑来满足用户的需求，游戏的特殊性在于它丰富的展现形式，有2D、2.5D、3D的展现方式，也有策略、射击、动作等一系列的交互形式，更有卡通、二次元、休闲、科技等不同的风格。

说它本质相同，是因为在展现层之后的业务逻辑的实现，都是大体相似的，只不过因为其场景不同，可能会有一些技术实现上的区别。举个例子，我们在一些网络游戏中如英雄联盟、绝地求生等，匹配游戏的时候，只有匹配到合适的人数才会开启一局对战游戏，这其中主要的两个角色就是玩家和服务器：

- 玩家：点击加入游戏，等待人数达标后，进入游戏 Happy
- 服务端：展示游戏的一个待开始的实例，等人数达标后，开启这局游戏实例

这种逻辑是不是似曾相识，我们日常拼团的业务逻辑，其实是一样的：

- 买家：点击加入团购，等待人数达标后，等待收到货物 Happy
- 服务端：展示货物的一个待开始的团购，等人数达标后，发起这次团购

所以，游戏的研发更多的是拼剧情、拼画质、拼运营、拼时间，技术的占比反倒没那么多了，毕竟底层业务逻辑大体如此。只要画质到位、剧情丰富，这个游戏也不会差到哪里去，这就导致整个游戏开发中非研发的占比非常高，所以如何更好的协调整个游戏的研发进展，如何使各个角色各司其职，如何使用基础研发设施更好更快的创造游戏价值，就成了游戏研发管理中重点。

当然，技术占比少，也不是说技术不重要，技术的迭代也是会颠覆行业的，比如随着AR、VR等各种XR继续发展，未来整个游戏的模式可能就会被颠覆。

### 游戏研发中的那些角色
常规的互联网应用开发中，我们最常见的角色无非就是产品、开发、设计、运营、客服等角色，而在游戏开发中，有非常非常多的角色，越是大型游戏，这种角色上的分工就越细致。比如一个大型项目，但从部门就能拆出很多：

- 项目部（项目管理、制作人等）
- 编剧部（剧情、对白）
- 设计部（关卡设计、技能设计、战斗系统设计、数值设计）
- 美术部（建模、地图、建筑、灯光、特效、CG动画等）
- 程序部（客户端、服务端、引擎、工具等）
- 音效部（音效、对白、插曲等）
- 质量部（游戏测试、性能等）
- ...

其中每个职位都有其明确的岗位职责，如数值设计师，一个第三人称的游戏，角色的身高是多少，门的高度是多少，场景中的各个组件的长高宽是多少，这些数值决定着这个游戏的玩法，能否跳跃障碍物，障碍物是否足够大可以躲避工具等等；再比如工具开发工程师，负责开发具体的编辑器给到策划、美术人员使用。除此之外还有很多其它职能部门，比如后期的发行、运营等等。

### 游戏是如何开发的

与常规的应用软件开发一样，游戏开发也有它自己的编辑器和引擎，我们可以在编辑器上对游戏中的界面进行布局，也可以通过引擎进行编程实现对应的游戏逻辑。目前市面上比较流行的两个开发工具就是 Unity 和 UnrealEngine（以下简称UE），当然也有国产的 Cocos。这里以 UE 为例，介绍下如何通过 UE 进行游戏开发。

![输入图片说明](https://blogine-1251619080.cos.ap-guangzhou.myqcloud.com/uploads/images/2022/0502/131144_eab5fde0.jpeg "在这里输入图片标题")

#### UnrealEngine 是什么？

一般都是说 UE 是一个强大的游戏开发工具，但其实不然，UE 除了能够开发游戏之外，也可以做非常多其他的事情：室内设计、城市规划、工业设计、视频直播、CG动画、仿真技术等等。UE 最近发布了 UE5，这也是自2014年 UE4 之后，时隔八年发布的一个版本，这个版本追求极致的画质以及高效的研发体验，并且发布次周其公司 Epic 就宣布融资20多亿美元，整体估值达到了300多亿美金，这也能看出来资本市场的看好，尤其是在当前元宇宙概念火爆的当下。

![输入图片说明](https://blogine-1251619080.cos.ap-guangzhou.myqcloud.com/uploads/images/2022/0502/122926_81bc6250.png "在这里输入图片标题")

#### UnrealEngine 能做哪些游戏

UE 可以制作你能想象到的几乎所有的游戏，比如FPP、TPP等游戏，也可以创建一些2D游戏如拼图类、滚球类的游戏，也可以创建一些AR、虚拟现实等游戏。

从18年开始比较火的绝地求生，就是使用 UE 引擎进行制作的，前两年吃鸡移动端大战中，腾讯的和平精英以及后来上线的 PUBGM 也是使用 UE 进行开发的。

![输入图片说明](https://blogine-1251619080.cos.ap-guangzhou.myqcloud.com/uploads/images/2022/0502/123417_6383f53e.png "在这里输入图片标题")

#### 游戏中的场景是如何制作的？

随着行业、技术的变革，游戏也越来越「3A化」，前段时间发行的《艾尔登法环》就是此类大作。

![输入图片说明](https://blogine-1251619080.cos.ap-guangzhou.myqcloud.com/uploads/images/2022/0502/130526_bb0de967.jpeg "在这里输入图片标题")

那这些游戏中宏大的场景是如何制作的呢？其实这些树木、山川、河流、物品、人物、光照等等，在 UE 中无外乎是一些类而已：

- 网格体
- 材质
- ...

举个例子，一棵树就是由基本的躯干+叶片组成，在没有赋予其材质之前，就是一个基本的形状，当我们赋予其材质（贴图）之后，一棵树就有了它的树皮、树叶、嫩芽、果实等等视觉效果，我们也可以根据游戏的进展，通过概念其材质来改变树木的颜色等。

![输入图片说明](https://blogine-1251619080.cos.ap-guangzhou.myqcloud.com/uploads/images/2022/0502/132811_a7329be1.jpeg "在这里输入图片标题")

![输入图片说明](https://blogine-1251619080.cos.ap-guangzhou.myqcloud.com/uploads/images/2022/0502/125345_306838a1.png "在这里输入图片标题")

再比如玩家角色，就是一种特殊的骨骼网络体，只不过其包含了一些特定的动画比如跳起、蹲下、冲刺等等。

那这些资源是在哪里制作呢？跟我们做互联网应用一样，有一些外部的设计工具制作并导入的，比如使用常见的 PS 制作材质纹理，使用 3DMax、Maya 等建模工具制作模型，这些最终都是可以导入到 UE 中进行使用的，用来组建游戏中的世界。

#### 游戏中的逻辑是如何编写的？

UE 本身就是一个引擎（可以理解为 SDK），我们可以借助 UE 提供的这些功能，很方便的实现我们想要的效果。比如在一个第三人称射击游戏中，我们需要我们的玩家能够有基本的物理属性，比如走路、游泳、跳跃、冲刺等等，那就可以使用 UE 所提供的角色移动组件，直接继承这些已经实现的功能，设置对应的参数，比如想要走多快，跳多高等，实现我们想要的逻辑。

![输入图片说明](https://blogine-1251619080.cos.ap-guangzhou.myqcloud.com/uploads/images/2022/0502/130258_8e083a2e.jpeg "在这里输入图片标题")

UE 本身是通过 C++ 进行编程的，并且提供了蓝图，一个类似于低代码平台的方式进行可视化脚本编程的特性，可以让非研发类的角色如游戏设计师等，通过拖拉拽就可以实现自己想要的游戏逻辑，比如在 FPP 游戏中，玩家都会有自己的血量，在被击中的时候就会掉血，这个逻辑就可以通过蓝图，在没有任何代码编写的情况下进行实现：

![输入图片说明](https://blogine-1251619080.cos.ap-guangzhou.myqcloud.com/uploads/images/2022/0502/131225_b398afa5.jpeg "在这里输入图片标题")

当然这些只是核心逻辑，我们还需要设计控件展示血条、把控件添加到玩家窗口等等，这些都可以通过这种可视化脚本编程的方式来实现。

![输入图片说明](https://blogine-1251619080.cos.ap-guangzhou.myqcloud.com/uploads/images/2022/0502/132456_228be5d7.jpeg "在这里输入图片标题")

那肯定有人会有疑惑，这些可视化脚本所提供的函数、组件不够用，没有办法实现我想要的效果。没错，UE 所提供的可视化脚本编程只能满足基础的游戏开发功能，一般情况下大型游戏都需要自己去添加非常多的函数和特性供游戏设计师使用，来达成想要的效果，甚至还有不少会自定义引擎来实现一些本身无法实现的功能，这些都是可以通过编程实现的。

想要了解更多 UnrealEngine，可以访问官网：https://www.unrealengine.com/ ，如果你机器性能还可以的话，可以下载安装体验一下，就会有更深的认识。

### 只是游戏开发吗？

如果只是游戏开发，那就又太 Low 了点，娱乐至死可不行，只有商业价值也不行，毕竟社会还是需要发展的。在我看来，目前的很多游戏技术不仅仅只是娱乐，就像 UE 虚幻引擎所关注的目标，游戏只是其中的一小部分而已，工业设计、城市规划、CG动画、3D直播互动等均蕴含巨大的社会价值，并且伴随着基础设施的发展、软硬件的更新迭代，元宇宙的未来也是可期的，这些虚实共生的技术能够更好的推动人们的创新和发展潜力，以更低成本、更加快速的试错方式，快速迭代，将人类科技推向一个新的台阶。

### 未来会怎样？

试想未来玩游戏会不会真的像《头号玩家》描绘的一样，而且打电话再不需要手机了，写代码不再需要敲键盘了，就像现在写代码不需要穿孔卡（PunchCard）一样，未来可能会有一种颠覆式的新的方式来编写代码，甚至有可能是脑机接口的成熟，让我们所想即所得。再或者由于基础设施的升级比如马斯克的星链、人工智能技术的突破等，人类的效率大幅提升，工作时间4个小时就可以完成超负荷的工作了，人们有更多的时间来关注地球，关注环境，关注身边的人.......

而且下一代互联网是什么样，现在也没人能说的准，但是可以肯定的是，目前 Web3、区块链、DAO、虚幻、智能等等这些技术的发展，决定了下一代互联网的形态，与其说下一代互联网会不会有这些技术，倒不如说这些技术的发展是决定下一代互联网形态的关键因素，所以建议这些技术都可以关注下。

那在未来的某个时间，是不是 Web 和 APP 不再是现在这种常规的表现形式了，它们的表现形式是不是更加趋向于现在游戏的表现形式，或者说进一步数字化、可视化？如果是这样的话，现有的常规研发模式可能会被逐渐颠覆，而目前游戏研发的模式可能会更加普适。

不过以上这些都很难说，我们能做的就是关注行业、经济、政策、技术的变化，紧跟时代的步伐，做足积累，为后续能够及时的做判断提供充足的决策依据。

### 最后

**你有关注过元宇宙吗，在未来元宇宙的研发领域下，你最关心哪些方面，欢迎留言一起讨论。**